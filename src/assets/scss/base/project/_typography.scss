/*
    Typography.
    This is where you define your abstracted type styles used within the project,
	prefixed with %type-
    You can then extend these classes from your styles, maintaining consistency
    of type throughout the project.
*/

/*
An object of type properties, for use with the type() mixin.
Here you can define a key for each font style, and a map of css properties such
as letter-spacing. Remember to define these in relative units so they scale with
the font size.

eg.
$type-styles: (
    serif: (
        font-family: $font-serif,
        letter-spacing: 0.07em,
        line-height: 1.5
    )
);
*/
$type-styles: ();

/*
An object of fallback type styles, for use with the type() mixin.
Here you can define different properies like letter-spacing to have the fallback
fonts look as similar to the real fonts as possible, to avoid a massive reflow
when the real fonts are loaded.

eg.
$fallback-type-styles: (
    serif: (
        letter-spacing: -0.03em
    )
);
*/
$fallback-type-styles: ();

/*
An object of type sizes, for use with the type() mixin.
Here you can define a key for each size, and an array of sizes according to how
they change at each breakpoint.

eg.
$type-sizes: (
    redwood: (36, 36, 32, 32, 32),
    scotspine: (32, 32, 28, 28, 28),
    smallpine: (28, 28, 24, 24, 24),
    oak: (24, 24, 20, 20, 20),
    cactus: (20, 20, 18, 18, 18),
    bonzai: (16, 16, 16, 16, 16),
    seedling: (12, 12, 12, 12, 12)
);
*/
$type-sizes: ();









h1, h2, h3 {
    margin: 0;
    font-weight: normal;
}

body {
    -webkit-font-smoothing: antialiased;
}

a {
    @include transition(color, 'lion');
    color: $color-text-dark;
}

li {
    margin-bottom: 0.7em;
}
